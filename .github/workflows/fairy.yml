name: fairy
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  fairy:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      COMPILER: ${{ matrix.config.compiler }}
      COMP: ${{ matrix.config.comp }}
      CXXFLAGS: "-Werror"
    strategy:
      matrix:
        config:
          - {
              name: "Ubuntu 20.04 GCC",
              os: ubuntu-20.04,
              compiler: g++,
              comp: gcc,
              run_expensive_tests: true
            }
          - {
              name: "Ubuntu 20.04 Clang",
              os: ubuntu-20.04,
              compiler: clang++,
              comp: clang,
              run_expensive_tests: false
            }

    defaults:
      run:
        working-directory: src
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download required packages
        run: |
          sudo apt update
          sudo apt install expect valgrind g++-multilib

      - name: Download the used network from the fishtest framework
        run: |
          make net

      - name: Test NNUE
        run: |
          make clean
          make -j2 ARCH=x86-64 nnue=yes debug=yes build
          ./stockfish bench

      - name: Test NNUE largeboards
        run: |
          make clean
          make -j2 ARCH=x86-64 largeboards=yes nnue=yes debug=yes build
          ./stockfish bench

      - name: Build all variants
        run: |
          make clean
          make -j2 ARCH=x86-64 largeboards=yes all=yes debug=yes build

      - name: Test protocols
        run: |
          ../tests/protocol.sh

      - name: Test variants.ini
        run: |
          ! ./stockfish check variants.ini 2>&1 >/dev/null | grep -v "Parsing variant"

      - name: Test variant perft
        run: |
          ../tests/perft.sh all

      - name: Test variant bench
        run: |
          ./stockfish bench xiangqi
          ./stockfish bench shogi
          ./stockfish bench capablanca
          ./stockfish bench sittuyin

      - name: Test 32bit largeboards
        run: |
          if [[ "$COMP" == "gcc" ]]; then export EXTRACXXFLAGS=-Wno-class-memaccess; fi
          make clean
          make -j2 ARCH=x86-32 largeboards=yes build
          ../tests/perft.sh largeboard
